/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.apiconnection;

import com.sun.syndication.feed.synd.SyndEntryImpl;
import java.awt.image.BufferedImage;
import java.io.BufferedInputStream;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.text.html.HTMLEditorKit;

/**
 *
 * @author rokom
 */
public class NewsGUI extends javax.swing.JFrame {
    private List<SyndEntryImpl> newsFeed;
    private HTMLEditorKit kit;

    /**
     * Creates new form NewsGUI
     */
    public NewsGUI() {
        initComponents();
    }
    
    public void setNewsFeed(List<SyndEntryImpl> feed) {
        newsFeed = feed;
    }
    
    public void readNews(int articleIndex) {
        String enclosure = newsFeed.get(articleIndex).getEnclosures().getFirst().toString();
        System.out.println(enclosure);
        // extract the image URL
        for (int i = 0; i < enclosure.length() - 5; i++) {
            if (enclosure.charAt(i) == 'u' && enclosure.charAt(i+1) == 'r'
                    && enclosure.charAt(i+2) == 'l' & enclosure.charAt(i+3) == '=') {
                enclosure = enclosure.substring(i+4);
                break;
            }
        }
        try {
            URL url = new URL(enclosure);
            URLConnection connection = url.openConnection();
            connection.addRequestProperty("user-agent", "Mozilla/5.0");
            BufferedInputStream is = new BufferedInputStream(connection.getInputStream());
            BufferedImage img = ImageIO.read(is);
            ImageIcon imgIcon = new ImageIcon(img);
            JLabel imgLabel = new JLabel();
            imgLabel.setIcon(imgIcon);
            imgLabel.setSize(imgIcon.getIconWidth(), imgIcon.getIconHeight());
            imageJP.add(imgLabel);
        } catch (MalformedURLException ex) {
            Logger.getLogger(NewsGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(NewsGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println("Image URL: " + enclosure);
        String headline = newsFeed.get(articleIndex).getTitle();
        String date = newsFeed.get(articleIndex).getPublishedDate().toString();
        String description = newsFeed.get(articleIndex).getDescription().toString();
        ArrayList<String> imageLinks = new ArrayList<>();
        // get a list of all image resources
        // find the sequence <img src="
        for (int i = 0; i < description.length() - 11; i++) {
            if (description.charAt(i) == '<' && description.charAt(i+1) == 'i'
                    && description.charAt(i+2) == 'm' && description.charAt(i+3) == 'g'
                    && description.charAt(i+5) == 's' && description.charAt(i+6) == 'r'
                    && description.charAt(i+7) == 'c') {
                int k = i + 9;
                String imgLink = "";
                do {
                    imgLink += description.charAt(k);
                    k++;
                } while (description.charAt(k) != '"');
                System.out.println(imgLink);
                if (!imageLinks.contains(imgLink))
                    imageLinks.add(imgLink);
            }
        }
        // remove image tag from the HTML
        description = description.replaceAll("<img", "<p hidden");
        kit = new HTMLEditorKit();
        kit.createDefaultDocument();
        readerEP.setEditorKit(kit);
        readerEP.setText(headline + date + description);
        readerEP.getCaret().moveDot(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        editorJP = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        readerEP = new javax.swing.JEditorPane();
        imageJP = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        editorJP.setBackground(new java.awt.Color(51, 51, 255));

        readerEP.setEditable(false);
        jScrollPane1.setViewportView(readerEP);

        javax.swing.GroupLayout editorJPLayout = new javax.swing.GroupLayout(editorJP);
        editorJP.setLayout(editorJPLayout);
        editorJPLayout.setHorizontalGroup(
            editorJPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editorJPLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
                .addContainerGap())
        );
        editorJPLayout.setVerticalGroup(
            editorJPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editorJPLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 317, Short.MAX_VALUE)
                .addContainerGap())
        );

        imageJP.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout imageJPLayout = new javax.swing.GroupLayout(imageJP);
        imageJP.setLayout(imageJPLayout);
        imageJPLayout.setHorizontalGroup(
            imageJPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 318, Short.MAX_VALUE)
        );
        imageJPLayout.setVerticalGroup(
            imageJPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(editorJP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imageJP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(imageJP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editorJP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewsGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel editorJP;
    private javax.swing.JPanel imageJP;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JEditorPane readerEP;
    // End of variables declaration//GEN-END:variables
}
